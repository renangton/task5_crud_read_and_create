# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
      - name: Docker Run
        run: docker compose up -d
      - name: Test with Gradle
        run: ./gradlew test
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: always() # always run even if the previous step fails
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'
      - name: Slack Notification on Success
        if: success()
        run: |
          curl -X POST 'Content-Type: application/json' \
          -d '{
            "text": "Test Success",
            "text": "${{ github.event.pull_request.title }}",
            "url": "${{ github.event.pull_request.html_url }}"
          }' ${{ secrets.SLACK_INCOMING_WEBHOOK_URL }}
      - name: Slack Notification on Failure
        if: failure()
        run: |
          curl -X POST 'Content-Type: application/json' \
          -d '{
            "text": "Test failure",
            "text": "${{ github.event.pull_request.title }}",
            "url": "${{ github.event.pull_request.html_url }}"
          }' ${{ secrets.SLACK_INCOMING_WEBHOOK_URL }}
