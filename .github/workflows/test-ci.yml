# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Test

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3.1.0
        with:
          java-version: '11'
          distribution: 'temurin'
      - name: Docker Run
        run: docker compose up -d
      - name: Test with Gradle
        run: ./gradlew test
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: always() # always run even if the previous step fails
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'
      - name: Slack Notification
        if: always()
        run: |
          if [[ ${{ job.status }} == "success" ]]; then
            COLOR="good"
          else
            COLOR="danger"
          fi
        
          jq -n --arg color "${COLOR}" \
          --arg jobLink '<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }} | ${{ github.workflow }}>' \
          --arg commit '<${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }} | ${{ github.sha }}>' '{
            attachments: [
              {
                pretext: ":github: Test ${{ job.status }} :tekkun_move:",
                color: $color,
                fields: [
                  {
                    title: "Actor",
                    value: "'"$GITHUB_ACTOR"'",
                    short: true
                  },
                  {
                    title: "Ref",
                    value: "'"$GITHUB_REF"'",
                    short: true
                  },
                  {
                    title: "Event Name",
                    value: "'"$GITHUB_EVENT_NAME"'",
                    short: true
                  },
                  {
                    title: "Actions URL",
                    value: $jobLink,
                    short: true
                  },
                  {
                    title: "Commit",
                    value: $commit,
                    short: false
                  }
                ]
              }
            ]
          }' | curl ${{ secrets.SLACK_INCOMING_WEBHOOK_URL }} -X POST -H 'Content-Type: application/json' -d @-
